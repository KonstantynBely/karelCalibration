PROGRAM TCP_1

VAR
  YZ_pos_Z1 : XYZWPR
  YZ_pos_Z2 : XYZWPR
  XZ_pos_Z1 : XYZWPR
  XZ_pos_Z2 : XYZWPR

  cal_pos : XYZWPR
  ref_pos : XYZWPR

  deltaX2 : REAL
  deltaX1 : REAL
  deltaY2 : REAL
  deltaY1 : REAL
  deltaX : REAL 
  deltaY : REAL
  deltaZ : REAL

  tcp_pos    : POSITION

  dX : REAL
  dY : REAL

  alfa : REAL
  beta : REAL
  atan_beta : REAL 
  atan_alfa : REAL

  TCP_ideal : XYZWPR
  TCP1 : XYZWPR
  TCP2 : XYZWPR

  cosA, sinA, cosB, sinB : REAL

  x0,x1,x2,y0,y1,y2 : REAL
  numerator, denominator : REAL

  rod_diam : REAL
  status : INTEGER
BEGIN
  TCP_ideal.x = 0
  TCP_ideal.y = 0.0
  TCP_ideal.z = 145.0
  TCP_ideal.w = 0.0
  TCP_ideal.p = 0.0
  TCP_ideal.r = 0.0

  rod_diam = 19.8
  deltaZ = 20.0

  cal_pos = GET_POS_REG(99, status)
  IF status <> 0 THEN
    WRITE('Blad odczytu PR[99]', CR)
    ABORT
  ENDIF

  ref_pos = cal_pos
  ref_pos.y = cal_pos.y - rod_diam / 2.0

  YZ_pos_Z2 = GET_POS_REG(31, status) 
  IF status <> 0 THEN
    WRITE('Blad odczytu PR[31]', CR)
    ABORT
  ENDIF

  YZ_pos_Z1 = GET_POS_REG(32, status) 
  IF status <> 0 THEN
    WRITE('Blad odczytu PR[32]', CR)
    ABORT
  ENDIF

  XZ_pos_Z2 = GET_POS_REG(33, status)
  IF status <> 0 THEN
    WRITE('Blad odczytu PR[33]', CR)
    ABORT
  ENDIF

  XZ_pos_Z1 = GET_POS_REG(34, status)
  IF status <> 0 THEN
    WRITE('Blad odczytu PR[34]', CR)
    ABORT
  ENDIF

  TCP2 = GET_POS_REG(51, status)
  IF status <> 0 THEN
    WRITE('Blad odczytu PR[34]', CR)
    ABORT
  ENDIF

  deltaX2 = XZ_pos_Z2.y - ref_pos.y
  deltaX1 = XZ_pos_Z1.y - ref_pos.y

  deltaY2 = YZ_pos_Z2.y - ref_pos.y
  deltaY1 = YZ_pos_Z1.y - ref_pos.y

  deltaX = deltaX2 - deltaX1
  deltaY = deltaY2 - deltaY1

  atan_beta = ATAN2(deltaZ, deltaX)
  beta = atan_beta

  atan_alfa = ATAN2(deltaZ, deltaY)
  alfa = atan_alfa

  WRITE('alfa deg = ', alfa, CR)
  WRITE('beta deg = ', beta, CR)

  cosA = COS(alfa)
  sinB = SIN(beta)
  cosB = COS(beta)
  sinA = SIN(alfa)

  TCP1.x = TCP_ideal.z * sinB
  TCP1.y = 0.0 - TCP_ideal.z * sinA * sinB
  TCP1.z = TCP_ideal.z * cosA * cosB
  TCP1.w = 0.0
  TCP1.p = beta
  TCP1.r = alfa

  x0 = ref_pos.y
  y0 = ref_pos.x

  x1 = XZ_pos_Z2.y
  y1 = XZ_pos_Z2.x

  x2 = x1 + TCP1.x
  y2 = y1 + TCP1.z

  numerator = ABS((x2 - x1)*(y1 - y0) - (x1 - x0)*(y2 - y1))
  denominator = SQRT((x2 - x1)*(x2 - x1) + (y2 - y1)*(y2 - y1))

  IF denominator <> 0.0 THEN
    dX = (numerator / denominator) - (rod_diam * sinB * COS((180.0 - beta) / 2.0))
  ELSE
    dX = 0.0
  ENDIF

  x1 = YZ_pos_Z2.y
  y1 = YZ_pos_Z2.x

  x2 = x1 + TCP1.y
  y2 = y1 + TCP1.z

  numerator = ABS((x2 - x1)*(y1 - y0) - (x1 - x0)*(y2 - y1))
  denominator = SQRT((x2 - x1)*(x2 - x1) + (y2 - y1)*(y2 - y1))

  IF denominator <> 0.0 THEN
    dY = (numerator / denominator) - (rod_diam * sinA * COS((180.0 - alfa) / 2.0))
  ELSE
    dY = 0.0
  ENDIF

  TCP2.x = dX * cosB + TCP_ideal.z * sinB
  TCP2.y = dX * sinA * sinB + dY * cosA - TCP_ideal.z * sinA * cosB
  TCP2.z = 0.0 - dX * cosA * sinB + dY * sinA + TCP_ideal.z * cosA * cosB
  TCP2.w = TCP1.w
  TCP2.p = TCP1.p
  TCP2.r = TCP1.r


  SET_POS_REG(51, TCP2, status)
  IF status <> 0 THEN
    WRITE('Blad zapisu do PR[51]', CR)
    ABORT
  ENDIF

END TCP_1